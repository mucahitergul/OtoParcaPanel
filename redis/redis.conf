# Redis Production Configuration for Oto Parça Panel
# Optimized for production environment with security and performance

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# Bind to all interfaces (Docker container)
bind 0.0.0.0

# Port configuration
port 6379

# TCP listen backlog
tcp-backlog 511

# TCP keepalive
tcp-keepalive 300

# =============================================================================
# GENERAL CONFIGURATION
# =============================================================================

# Run as daemon
daemonize no

# Process ID file
pidfile /var/run/redis_6379.pid

# Log level (debug, verbose, notice, warning)
loglevel notice

# Log file
logfile ""

# Syslog
# syslog-enabled yes
# syslog-ident redis
# syslog-facility local0

# Number of databases
databases 16

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Require password authentication
# requirepass your_redis_password_here

# Rename dangerous commands
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command KEYS ""
rename-command CONFIG "CONFIG_b835c3f1a5d6e8f2a9c4b7e3d1f8a2c5"
rename-command SHUTDOWN "SHUTDOWN_a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6"
rename-command DEBUG ""
rename-command EVAL ""

# Protected mode
protected-mode yes

# =============================================================================
# MEMORY MANAGEMENT
# =============================================================================

# Maximum memory usage (adjust based on available RAM)
maxmemory 512mb

# Memory policy when max memory is reached
maxmemory-policy allkeys-lru

# Memory sampling for LRU
maxmemory-samples 5

# =============================================================================
# PERSISTENCE CONFIGURATION
# =============================================================================

# RDB Snapshots
# Save the DB on disk:
# save <seconds> <changes>
save 900 1
save 300 10
save 60 10000

# Stop writes if RDB snapshots fail
stop-writes-on-bgsave-error yes

# Compress RDB files
rdbcompression yes

# Checksum RDB files
rdbchecksum yes

# RDB filename
dbfilename dump.rdb

# Working directory
dir /data

# =============================================================================
# AOF CONFIGURATION
# =============================================================================

# Enable AOF persistence
appendonly yes

# AOF filename
appendfilename "appendonly.aof"

# AOF sync policy
# appendfsync always
appendfsync everysec
# appendfsync no

# Rewrite AOF when it grows by this percentage
auto-aof-rewrite-percentage 100

# Minimum size for AOF rewrite
auto-aof-rewrite-min-size 64mb

# Load truncated AOF file on startup
aof-load-truncated yes

# Use RDB-AOF hybrid persistence
aof-use-rdb-preamble yes

# =============================================================================
# SLOW LOG CONFIGURATION
# =============================================================================

# Slow log threshold (microseconds)
slowlog-log-slower-than 10000

# Slow log max length
slowlog-max-len 128

# =============================================================================
# LATENCY MONITORING
# =============================================================================

# Latency monitoring threshold
latency-monitor-threshold 100

# =============================================================================
# CLIENT CONFIGURATION
# =============================================================================

# Max number of clients
maxclients 10000

# Client timeout (seconds)
timeout 300

# Client output buffer limits
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Hash table rehashing
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List compression
list-max-ziplist-size -2
list-compress-depth 0

# Set optimization
set-max-intset-entries 512

# Sorted set optimization
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog sparse representation
hll-sparse-max-bytes 3000

# Streams configuration
stream-node-max-bytes 4096
stream-node-max-entries 100

# =============================================================================
# ACTIVE REHASHING
# =============================================================================

# Active rehashing
activerehashing yes

# =============================================================================
# REPLICATION CONFIGURATION
# =============================================================================

# Replica serve stale data
replica-serve-stale-data yes

# Replica read only
replica-read-only yes

# Replica priority
replica-priority 100

# =============================================================================
# REDIS CLUSTER CONFIGURATION
# =============================================================================

# Cluster mode (disabled for single instance)
# cluster-enabled no
# cluster-config-file nodes-6379.conf
# cluster-node-timeout 15000

# =============================================================================
# LUA SCRIPTING
# =============================================================================

# Lua script timeout
lua-time-limit 5000

# =============================================================================
# REDIS MODULES
# =============================================================================

# Load modules
# loadmodule /path/to/module.so

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================

# Keyspace notifications
# notify-keyspace-events ""

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Hash function for hash slots
# hash-function crc16

# Jemalloc background thread
jemalloc-bg-thread yes

# =============================================================================
# MONITORING AND DEBUGGING
# =============================================================================

# Always show logo
always-show-logo yes

# Set process title
set-proc-title yes

# Process title template
proc-title-template "{title} {listen-addr} {server-mode}"

# =============================================================================
# THREADED I/O CONFIGURATION
# =============================================================================

# I/O threads (Redis 6.0+)
# io-threads 4
# io-threads-do-reads yes

# =============================================================================
# TLS/SSL CONFIGURATION (if needed)
# =============================================================================

# TLS port
# tls-port 6380

# TLS certificate and key files
# tls-cert-file redis.crt
# tls-key-file redis.key

# TLS CA certificate file
# tls-ca-cert-file ca.crt

# =============================================================================
# CUSTOM CONFIGURATION FOR OTO PARÇA PANEL
# =============================================================================

# Application-specific settings

# Cache TTL for product data (seconds)
# This is handled by the application, not Redis directly

# Session timeout (handled by application)
# Default: 1 hour = 3600 seconds

# Rate limiting windows (handled by application)
# API rate limiting: 15 minutes = 900 seconds
# Login rate limiting: 5 minutes = 300 seconds

# =============================================================================
# OPTIMIZATION NOTES
# =============================================================================

# 1. Memory Usage:
#    - Adjust maxmemory based on available RAM
#    - Monitor memory usage with INFO memory
#    - Use appropriate eviction policy

# 2. Persistence:
#    - RDB for point-in-time snapshots
#    - AOF for durability
#    - Hybrid RDB-AOF for best of both

# 3. Performance:
#    - Monitor slow queries with SLOWLOG
#    - Use pipelining for bulk operations
#    - Optimize data structures

# 4. Security:
#    - Always use password authentication
#    - Rename or disable dangerous commands
#    - Use TLS for network encryption

# 5. Monitoring:
#    - Enable latency monitoring
#    - Monitor client connections
#    - Track memory usage and fragmentation

# =============================================================================
# END OF CONFIGURATION
# =============================================================================